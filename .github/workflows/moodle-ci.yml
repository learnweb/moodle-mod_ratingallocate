name: Moodle Plugin CI

on: [ push, pull_request ]

jobs:
  static:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['8.3']
        moodle-branch: ['MOODLE_500_STABLE']
        database: ['pgsql']

    steps:
      - name: Start PostgreSQL
        run: docker run -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_HOST_AUTH_METHOD=trust -d postgres:14

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1 --no-init
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Mess Detector
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc
        continue-on-error: true

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

  test:
    runs-on: ubuntu-latest
    needs: static

    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2', '8.3', '8.4']
        moodle-branch: [
          'MOODLE_401_STABLE',
          'MOODLE_404_STABLE',
          'MOODLE_405_STABLE',
          'MOODLE_500_STABLE'
        ]
        database: ['mariadb', 'pgsql']
        exclude:
          - php: '8.0'
            moodle-branch: 'MOODLE_500_STABLE'
          - php: '8.1'
            moodle-branch: 'MOODLE_500_STABLE'
          - php: '8.0'
            moodle-branch: 'MOODLE_405_STABLE'
          - php: '8.4'
            moodle-branch: 'MOODLE_405_STABLE'
          - php: '8.0'
            moodle-branch: 'MOODLE_404_STABLE'
          - php: '8.4'
            moodle-branch: 'MOODLE_404_STABLE'
          - php: '8.2'
            moodle-branch: 'MOODLE_401_STABLE'
          - php: '8.3'
            moodle-branch: 'MOODLE_401_STABLE'
          - php: '8.4'
            moodle-branch: 'MOODLE_401_STABLE'

    steps:
      - name: Start MariaDB
        if: matrix.database == 'mariadb'
        run: docker run -p 3306:3306 -e MYSQL_USER=root -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mariadb:10

      - name: Start PostgreSQL
        if: matrix.database == 'pgsql'
        run: docker run -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_HOST_AUTH_METHOD=trust -d postgres:14

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome --auto-rerun 0

      # This step allows to upload Behat faildump (screenshots) as workflow artifact,
      # so it can be downloaded and inspected. You do not need this step if you
      # are not running Behat test. Artifact will be retained for 7 days.
      - name: Upload Behat Faildump
        if: ${{ failure() && steps.behat.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat Faildump (${{ join(matrix.*, ', ') }})
          path: ${{ github.workspace }}/moodledata/behat_dump
          retention-days: 7
          if-no-files-found: ignore
